{
  plane-sailing-server: {
    comms: {
      # Config for the web server that the Plane/Sailing client will connect to
      web-server: {
        port: 8090,
        readable-json: false
      },

      # UDP port(s) to receive AIS NMEA-0183 messages (ship data) on
      ais-receivers: [
        {
          port: 10111
        }
      ],

      # TCP server(s) to connect to for ADS-B / Mode S messages (aircraft data from your receiver)
      adsb-receivers: [
        {
          # Protocol options:
          # "beastbinary" (dump1090 port 30005) - preferred
          # "beastavr" (dump1090 port 30002)
          # "sbs" (dump1090 port 30003)
          # "dump1090json"
          # For the TCP protocols, provide the "host" and "port" parameters:
          protocol: "beastbinary",
          host: "127.0.0.1",
          port: 30005

          # For "dump1090json" supply the URL of the aircraft.json file as the "file" parameter,
          # which can be either a web URL or a local file URL.
          #protocol: "dump1090json"
          #file: "file:///run/dump1090-fa/aircraft.json"
          #file: "http://127.0.0.1/skyaware/data/aircraft.json"
        }
        # More than one ADSB data receiver to connect to? Just add another block here:
        # {
        #    protocol: ...etc...
        # }
      ],

      # TCP server(s) to connect to for MLAT messages (aircraft data calculated server-side e.g. by FlightAware)
      # Not required if adsb-receiver protocol is set to "dump1090json"
      mlat-receivers: [
        {
          # Protocol options:
          # "beastbinary" (piaware port 30105) - preferred
          # "sbs" (piaware port 30106)
          protocol: "beastbinary",
          host: "127.0.0.1",
          port: 30105
        }
      ],

      # TCP server(s) to connect to for APRS messages using KISS protocol
      aprs-receivers: [
        {
          host: "127.0.0.1",
          port: 8001
        }
      ]
      # Example with no APRS receivers:
      # aprs-receivers: []
    },

    # Custom tracks to add on startup
    custom-tracks: {
      # Supplying your base station location shows it on the map, but also assists with
      # ADS-B position calculations. Supply it with some degree of accuracy - not
      # necessarily enough to identify your specific house, but to within 100m or so
      base-stations: [
        {name: "Your Base Station Name", lat: 50.75128, lon: -1.90168, alt: 45}
      ],
      airports: [
        {name: "Bournemouth", lat: 50.78055, lon: -1.83938, icao-code: "EGHH"},
        {name: "Southampton", lat: 50.95177, lon: -1.35625, icao-code: "EGHI"},
        {name: "Bristol", lat: 51.38363, lon: -2.71574, icao-code: "EGGD"},
        {name: "London Heathrow", lat: 51.46999, lon: -0.45470, icao-code: "EGLL"}
      ],
      seaports: [
        {name: "Poole", lat: 50.70796, lon: -1.99495},
        {name: "Southampton", lat: 50.89871, lon: -1.41198},
        {name: "Portland", lat: 50.56768, lon: -2.43635},
        {name: "Portsmouth", lat: 50.81206, lon: -1.09251}
      ]
    }

    # A variety of timings that the server uses, in milliseconds
    timing: {
      # Drop a normal air track that goes out of range after 5 minutes
      drop-air-track-after: 300000,
      # Drop an air track that has landed after 10 seconds
      drop-air-track-at-zero-alt-after: 10000,
      # Drop an air track that has no position data after 60 seconds
      drop-air-track-no-position-after: 60000,
      # Drop a ship track that is moving after 2 hours
      drop-ship-track-moving-after: 1200000,
      # Drop a ship track that is static after 2 days
      drop-ship-track-static-after: 172800000,
      # Drop a ship track that has no position data after 2 hours
      drop-ship-track-no-position-after: 1200000,
      # Drop an AIS base station after 100 days
      drop-ais-base-station-after: 8640000000,
      # Drop an APRS track that is moving after 2 hours
      drop-aprs-track-moving-after: 1200000,
      # Drop an APRS track that is static after 2 days
      drop-aprs-track-static-after: 172800000,
      # Drop an APRS track that has no position data after 2 hours
      drop-aprs-track-no-position-after: 1200000,
      # Drop an APRS base station after 100 days
      drop-aprs-base-station-after: 8640000000,
    }

    # A variety of range related settings, in nautical miles
    ranges {
      # The maximum expected range you may see to an aircraft. Used to rule out any spurious tracks reporting incorrect
      # positions. For comparison, radar horizon from sea level to 50,000ft is ~240 nmi. From the top of Everest, ~420
      # nmi.
      expected-aircraft-range: 1000,
      # The maximum expected range you may see to an AIS target. Used to rule out any spurious tracks reporting
      # incorrect positions. For comparison, radar horizon from a 100m antenna to sea level is ~20 nmi. AIS can
      # sometimes propagate via unusual modes which may be of interest, so this is set significantly longer than line of
      # sight, but still low enough to trap things like corruption giving the wrong hemisphere - unless you live near
      # the equator/meridian, in which case ¯\_(ツ)_/¯
      expected-ais-range: 1000,
    }

    # Debug options
    print-track-table-to-stdout: false
  }
}
